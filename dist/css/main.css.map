{"version":3,"sources":["main.css","main.scss","../../node_modules/normalize.css/normalize.css","settings/_settings.colours.scss","settings/_settings.global.scss","settings/_settings.mq.scss","tools/_tools.mixins.scss","generic/_generic.reset.scss","generic/_generic.global.scss","elements/_elements.headings.scss","objects/_objects.icon.scss","objects/_objects.pack.scss","objects/_objects.layout.scss","objects/_objects.wrapper.scss","objects/_objects.list.scss","utilities/_utilities.display.scss","utilities/_utilities.widths.scss","../../node_modules/sass-mq/_mq.scss","utilities/_utilities.text.scss","utilities/_utilities.spacing.scss","utilities/_utilities.headings.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n/**\n * LIBS\n * Normalize: https://github.com/necolas/normalize.css\n * mq:        https://github.com/sass-mq/sass-mq\n */\n/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n */\n/* Document\n   ========================================================================== */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  line-height: 1.15;\n  /* 2 */\n  -ms-text-size-adjust: 100%;\n  /* 3 */\n  -webkit-text-size-adjust: 100%;\n  /* 3 */ }\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers (opinionated).\n */\nbody {\n  margin: 0; }\n\n/**\n * Add the correct display in IE 9-.\n */\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in IE.\n */\nfigcaption,\nfigure,\nmain {\n  /* 1 */\n  display: block; }\n\n/**\n * Add the correct margin in IE 8.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\na {\n  background-color: transparent;\n  /* 1 */\n  -webkit-text-decoration-skip: objects;\n  /* 2 */ }\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\na:active,\na:hover {\n  outline-width: 0; }\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct font style in Android 4.3-.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Add the correct background and color in IE 9-.\n */\nmark {\n  background-color: #ff0;\n  color: #000; }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n */\naudio,\nvideo {\n  display: inline-block; }\n\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\nimg {\n  border-style: none; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */ }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * 1. Add the correct display in IE 9-.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n */\ndetails,\nmenu {\n  display: block; }\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item; }\n\n/* Scripting\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n */\ncanvas {\n  display: inline-block; }\n\n/**\n * Add the correct display in IE.\n */\ntemplate {\n  display: none; }\n\n/* Hidden\n   ========================================================================== */\n/**\n * Add the correct display in IE 10-.\n */\n[hidden] {\n  display: none; }\n\n/**\n * SETTINGS\n * Global config files.\n */\n/* ==========================================================================\n   #COLOURS\n   ========================================================================== */\n/**\n * Define frequently used project level (e.g. brand) colours.\n *\n * Note: Please remove example colours below before use in a project.\n */\n/**\n * Function to get a colour value from the above map.\n *\n * Example usage:\n *\n * Default colour:  colour(red);\n * Shade selection: colour(red, light);\n */\n/* ==========================================================================\n   #GLOBAL\n   ========================================================================== */\n/**\n * Project level generic configuration settings.\n *\n * This should include configuration for values such as base type styles,\n * UI config values (e.g. for consistent styling of components).\n *\n * These values should be updated on a per project basis.\n */\n/* ==========================================================================\n   #MQ\n   ========================================================================== */\n/**\n * Configuration for the mq() sass mixin lib:\n * https://github.com/sass-mq/sass-mq\n */\n/**\n * TOOLS\n * Site-wide mixins and functions.\n */\n/* ==========================================================================\n   #MIXINS\n   ========================================================================== */\n/**\n * A collection of generic/handy(!) mixins.\n */\n/**\n * Generate a font size in rem units from a given pixel value.\n *\n * This is a bit of a cut down version of the inuit font-size mixin:\n * https://github.com/inuitcss/inuitcss/blob/develop/tools/_tools.font-size.scss\n *\n * 1. Old IE fallback. Maybe not necessary but we'll leave this in for now (stylint doesn't\n *    like it though).\n * 2. Font size in rem units.\n *\n * @param $font-size   [size of font needed in pixels. E.g. 16px]\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/**\n * Display related mixins.\n *\n * 1. Visually hide an element. This is an accessibile way of \"hiding\" an element from view\n *    while keeping it focusable (http://snook.ca/archives/html_and_css/hiding-content-for-accessibility)\n *\n * 2. Hide the text in an element.\n *\n * 3. http://www.cssmojo.com/the-very-latest-clearfix-reloaded/\n *\n */\n/**\n * GENERIC\n * Base/reset or globally available generic styles.\n */\n/* ==========================================================================\n   #RESET\n   ========================================================================== */\n/**\n * Some futher generic global resets to extend normalize.\n *\n * 1. See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n * 2. inuitcss: Ensure the page always fills at least the entire height of the viewport.\n * 3. Remove default margins. We'll redeclare them in `generic.global`.\n */\nhtml {\n  box-sizing: border-box;\n  min-height: 100%; }\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit; }\n\n/* stylelint-disable */\nbody,\nh1, h2, h3, h4, h5, h6,\nblockquote, p, pre,\ndl, dd, ol, ul,\nfigure,\nhr,\nfieldset, legend {\n  margin: 0;\n  padding: 0; }\n\n/* stylelint-enable */\n/**\n * <nav /> element resets.\n * 1. Remove spacing from any <ul /> elements inside a <nav /> element.\n */\nnav ul {\n  list-style: none;\n  margin: 0;\n  padding: 0; }\n\nnav a {\n  text-decoration: none; }\n\n/**\n * <img /> element resets.\n * Credit: https://github.com/inuitcss/inuitcss/blob/develop/elements/_elements.images.scss\n *\n * 1. Setting `vertical-align` removes the whitespace that appears under `img`\n *    elements when they are dropped into a page as-is. Safer alternative to\n *    using `display: block;`.\n */\nimg {\n  max-width: 100%;\n  vertical-align: middle; }\n\n/**\n * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s\n *    not make the image fluid.\n */\nimg[width],\nimg[height] {\n  max-width: none; }\n\n/**\n * <form /> element resets.\n * 1. To override _normalize.css setting.\n */\nform input[type='search'] {\n  box-sizing: border-box; }\n\n/* ==========================================================================\n   #GLOBAL\n   ========================================================================== */\n/**\n * Global level styles.\n * These should be styles that affect elements site wide (sort of like a project\n * specific reset).\n *\n * Base font sizes, colours or any other default styles for the project should be\n * defined in here.\n *\n * Global config defined in: settings/_global.scss\n *\n * 1. Always declare margins in the same direction:\n *    csswizardry.com/2012/06/single-direction-margin-declarations\n */\nhtml {\n  font-family: sans-serif;\n  font-size: 1em;\n  line-height: 1.5; }\n\nbody {\n  color: #333; }\n\n/* stylelint-disable */\naddress,\nh1, h2, h3, h4, h5, h6,\nblockquote, p, pre,\ndl, ol, ul,\nfigure,\nhr,\ntable,\nfieldset {\n  margin-bottom: 24px; }\n\n/* stylelint-enable */\na {\n  color: #333; }\n\n/**\n * ELEMENTS.\n * HTML element specific (headings, images etc) default styles.\n */\n/* ==========================================================================\n   #HEADINGS\n   ========================================================================== */\n/**\n * Default styles for headings 1 - 6.\n *\n * Anything more specific than the font family, weight and size or heading\n * variations should be applied via targeted classes, rather than the default.\n *\n * The $project-heading-sizes should be configured on a per-project basis\n * but these will make an ok default.\n */\nh1 {\n  font-size: 36px;\n  font-size: 2.25rem; }\n\nh2 {\n  font-size: 28px;\n  font-size: 1.75rem; }\n\nh3 {\n  font-size: 24px;\n  font-size: 1.5rem; }\n\nh4 {\n  font-size: 20px;\n  font-size: 1.25rem; }\n\nh5 {\n  font-size: 18px;\n  font-size: 1.125rem; }\n\nh6 {\n  font-size: 16px;\n  font-size: 1rem; }\n\n/**\n * OBJECTS.\n * Abstracted object styles (design patterns etc).\n */\n/* ==========================================================================\n   #ICON\n   ========================================================================== */\n/**\n * SVG icons are part of the SVG spritesheet automatically generated by the\n * `gulp icons` task from any .svg files in ./svg.\n *\n * If no icons will be used in this project, you can safely remove this file.\n *\n * 1. Setting a default size incase the viewbox is massive.\n */\n.o-icon {\n  display: inline-block;\n  height: 40px;\n  width: 40px; }\n\n/* ==========================================================================\n   #PACK\n   ========================================================================== */\n/**\n * Source: inuitcss (https://github.com/inuitcss/inuitcss)\n *\n * The pack object simply causes any number of elements pack up horizontally to\n * automatically fill an equal, fluid width of their parent.\n *\n * 1. Fill all available space.\n * 2. Remove any leftover styling from lists.\n * 3. Cause children to be automatically equally sized.\n */\n.o-pack {\n  display: table;\n  margin-left: 0;\n  /* [2] */\n  table-layout: fixed;\n  /* [3] */\n  width: 100%;\n  /* [1] */ }\n\n/**\n* 1. Cause children to adopt table-like structure.\n* 2. Default item alignment is with the tops of each other.\n*/\n.o-pack__item {\n  display: table-cell;\n  /* [1] */\n  vertical-align: top;\n  /* [2] */ }\n  .o-pack--middle > .o-pack__item {\n    vertical-align: middle; }\n  .o-pack--bottom > .o-pack__item {\n    vertical-align: bottom; }\n\n/**\n * Unequal-width items.\n */\n.o-pack--auto {\n  table-layout: auto; }\n\n/* ==========================================================================\n   #LAYOUT\n   ========================================================================== */\n/**\n * Grid-like layout system from inuitcss: https://github.com/inuitcss/inuitcss\n *\n * The layout object provides us with a column-style layout system. This file\n * contains the basic structural elements, but classes should be complemented\n * with width utilities, for example:\n *\n *   <div class=\"o-layout\">\n *     <div class=\"o-layout__item  u-width-1/2\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2\">\n *     </div>\n *   </div>\n *\n * The above will create a two-column structure in which each column will\n * fluidly fill half of the width of the parent. We can have more complex\n * systems:\n *\n *   <div class=\"o-layout\">\n *     <div class=\"o-layout__item  u-width-1/1  u-width-1/3@tablet\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2  u-width-1/3@tablet\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2  u-width-1/3@tablet\">\n *     </div>\n *   </div>\n *\n * The above will create a system in which the first item will be 100% width\n * until we enter our tablet breakpoint, when it will become 33.333% width. The\n * second and third items will be 50% of their parent, until they also become\n * 33.333% width at the tablet breakpoint.\n *\n * We can also manipulate entire layout systems by adding a series of modifiers\n * to the `.o-layout` block. For example:\n *\n *   <div class=\"o-layout  o-layout--reverse\">\n *\n * This will reverse the displayed order of the system so that it runs in the\n * opposite order to our source, effectively flipping the system over.\n *\n *   <div class=\"o-layout  o-layout--[right|center]\">\n *\n * This will cause the system to fill up from either the centre or the right\n * hand side. Default behaviour is to fill up the layout system from the left.\n *\n * There are plenty more options available to us: explore them below.\n */\n/* Default/mandatory classes.\n   ========================================================================== */\n/**\n * 1. Allows us to use the layout object on any type of element.\n * 2. We need to defensively reset any box-model properties.\n * 3. Use the negative margin trick for multi-row grids:\n *    http://csswizardry.com/2011/08/building-better-grid-systems/\n */\n.o-layout {\n  display: block;\n  /* [1] */\n  list-style: none;\n  /* [1] */\n  margin: 0;\n  /* [2] */\n  margin-left: -24px;\n  /* [3] */\n  padding: 0;\n  /* [2] */\n  font-size: 0; }\n\n/**\n* 1. Required in order to combine fluid widths with fixed gutters.\n* 2. Allows us to manipulate grids vertically, with text-level properties,\n*    etc.\n* 3. Default item alignment is with the tops of each other, like most\n*    traditional grid/layout systems.\n* 4. By default, all layout items are full-width (mobile first).\n* 5. Gutters provided by left padding:\n*    http://csswizardry.com/2011/08/building-better-grid-systems/\n* 6. Fallback for old IEs not supporting `rem` values.\n*/\n.o-layout__item {\n  box-sizing: border-box;\n  /* [1] */\n  display: inline-block;\n  /* [2] */\n  padding-left: 24px;\n  /* [5] */\n  vertical-align: top;\n  /* [3] */\n  width: 100%;\n  /* [4] */\n  /* stylelint-disable */\n  font-size: 16px;\n  /* [6] */\n  font-size: 1rem;\n  /* stylelint-enable */ }\n\n/* Vertical alignment modifiers.\n   ========================================================================== */\n/**\n * Align all grid items to the middles of each other.\n */\n.o-layout--middle > .o-layout__item {\n  vertical-align: middle; }\n\n/**\n * Align all grid items to the bottoms of each other.\n */\n.o-layout--bottom > .o-layout__item {\n  vertical-align: bottom; }\n\n/* Fill order modifiers.\n   ========================================================================== */\n/**\n * Fill up the layout system from the centre.\n */\n.o-layout--center {\n  text-align: center; }\n  .o-layout--center > .o-layout__item {\n    text-align: left; }\n\n/**\n * Fill up the layout system from the right-hand side.\n */\n.o-layout--right {\n  text-align: right; }\n  .o-layout--right > .o-layout__item {\n    text-align: left; }\n\n/**\n * Fill up the layout system from the left-hand side. This will likely only be\n * needed when using in conjunction with `.o-layout--reverse`.\n*/\n.o-layout--left {\n  text-align: left; }\n  .o-layout--left > .o-layout__item {\n    text-align: left; }\n\n/**\n * Reverse the rendered order of the grid system.\n */\n.o-layout--reverse {\n  direction: rtl; }\n  .o-layout--reverse > .o-layout__item {\n    direction: ltr; }\n\n/* Auto-widths modifier.\n   ========================================================================== */\n/**\n * Cause layout items to take up a non-explicit amount of width.\n */\n.o-layout--auto > .o-layout__item {\n  width: auto; }\n\n/* ==========================================================================\n   #WRAPPER\n   ========================================================================== */\n/**\n * Page-level constraining and wrapping elements.\n *\n * 1. max-width of the wrapper element (px).\n */\n.o-wrapper {\n  margin: 0 auto;\n  max-width: 1366px;\n  padding-left: 24px;\n  padding-right: 24px; }\n  .o-wrapper::after {\n    clear: both;\n    content: '';\n    display: table; }\n\n/* ==========================================================================\n   #LIST\n   ========================================================================== */\n/**\n * Inline list.\n */\n.o-list-inline {\n  list-style: none;\n  margin: 0; }\n\n.o-list-inline__item {\n  display: inline-block; }\n\n/**\n * Bare lists mate.\n */\n.o-list-bare {\n  list-style: none;\n  margin: 0; }\n\n/**\n * UTILITIES\n * High level, explicit selectors. Includes overrides and generic\n * helper classes.\n */\n/* ==========================================================================\n   #DISPLAY\n   ========================================================================== */\n/**\n * A place for display related utility classes.\n */\n.u-hidden-visually {\n  border: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px; }\n\n.u-clearfix::after {\n  clear: both;\n  content: '';\n  display: table; }\n\n/* ==========================================================================\n   #WIDTHS\n   ========================================================================== */\n/**\n * Width utility from inuitcss: https://github.com/inuitcss/inuitcss\n *\n * inuitcss generates a series of utility classes that give a fluid width to\n * whichever element they’re applied, e.g.:\n *\n *   <img src=\"\" alt=\"\" class=\"u-width-1/2\" />\n *\n * These classes are most commonly used in conjunction with our layout system,\n * e.g.:\n *\n *   <div class=\"o-layout__item  u-width-1/2\">\n *\n * By default, inuitcss will also generate responsive variants of each of these\n * classes by using your Sass MQ configuration, e.g.:\n *\n *   <div class=\"o-layout__item  u-width-1/1  u-width-1/2@tablet  u-width-1/3@desktop\">\n *\n * Optionally, inuitcss can generate offset classes which can push and pull\n * elements left and right by a specified amount, e.g.:\n *\n *   <div class=\"o-layout__item  u-width-2/3  u-pull-1/3\">\n *\n * This is useful for making very granular changes to the rendered order of\n * items in a layout.\n *\n * N.B. This option is turned off by default.\n */\n/**\n * A series of width helper classes that you can use to size things like grid\n * systems. Classes take a fraction-like format (e.g. `.u-width-2/3`). Use these in\n * your markup:\n *\n * <div class=\"u-width-7/12\">\n *\n * The following will generate widths helper classes based on the fractions\n * defined in the `$inuit-fractions` list.\n */\n.u-width-1\\/1 {\n  width: 100% !important; }\n\n.u-width-1\\/2 {\n  width: 50% !important; }\n\n.u-width-2\\/2 {\n  width: 100% !important; }\n\n.u-width-1\\/3 {\n  width: 33.33333% !important; }\n\n.u-width-2\\/3 {\n  width: 66.66667% !important; }\n\n.u-width-3\\/3 {\n  width: 100% !important; }\n\n.u-width-1\\/4 {\n  width: 25% !important; }\n\n.u-width-2\\/4 {\n  width: 50% !important; }\n\n.u-width-3\\/4 {\n  width: 75% !important; }\n\n.u-width-4\\/4 {\n  width: 100% !important; }\n\n.u-width-1\\/5 {\n  width: 20% !important; }\n\n.u-width-2\\/5 {\n  width: 40% !important; }\n\n.u-width-3\\/5 {\n  width: 60% !important; }\n\n.u-width-4\\/5 {\n  width: 80% !important; }\n\n.u-width-5\\/5 {\n  width: 100% !important; }\n\n/**\n * If we’re using Sass-MQ, automatically generate grid system(s) for each of our\n * defined breakpoints, and give them a Responsive Suffix, e.g.:\n *\n * <div class=\"u-width-3/12@mobile\">\n */\n@media (min-width: 20em) {\n  .u-width-1\\/1\\@mobile {\n    width: 100% !important; }\n  .u-width-1\\/2\\@mobile {\n    width: 50% !important; }\n  .u-width-2\\/2\\@mobile {\n    width: 100% !important; }\n  .u-width-1\\/3\\@mobile {\n    width: 33.33333% !important; }\n  .u-width-2\\/3\\@mobile {\n    width: 66.66667% !important; }\n  .u-width-3\\/3\\@mobile {\n    width: 100% !important; }\n  .u-width-1\\/4\\@mobile {\n    width: 25% !important; }\n  .u-width-2\\/4\\@mobile {\n    width: 50% !important; }\n  .u-width-3\\/4\\@mobile {\n    width: 75% !important; }\n  .u-width-4\\/4\\@mobile {\n    width: 100% !important; }\n  .u-width-1\\/5\\@mobile {\n    width: 20% !important; }\n  .u-width-2\\/5\\@mobile {\n    width: 40% !important; }\n  .u-width-3\\/5\\@mobile {\n    width: 60% !important; }\n  .u-width-4\\/5\\@mobile {\n    width: 80% !important; }\n  .u-width-5\\/5\\@mobile {\n    width: 100% !important; } }\n\n@media (min-width: 46.25em) {\n  .u-width-1\\/1\\@tablet {\n    width: 100% !important; }\n  .u-width-1\\/2\\@tablet {\n    width: 50% !important; }\n  .u-width-2\\/2\\@tablet {\n    width: 100% !important; }\n  .u-width-1\\/3\\@tablet {\n    width: 33.33333% !important; }\n  .u-width-2\\/3\\@tablet {\n    width: 66.66667% !important; }\n  .u-width-3\\/3\\@tablet {\n    width: 100% !important; }\n  .u-width-1\\/4\\@tablet {\n    width: 25% !important; }\n  .u-width-2\\/4\\@tablet {\n    width: 50% !important; }\n  .u-width-3\\/4\\@tablet {\n    width: 75% !important; }\n  .u-width-4\\/4\\@tablet {\n    width: 100% !important; }\n  .u-width-1\\/5\\@tablet {\n    width: 20% !important; }\n  .u-width-2\\/5\\@tablet {\n    width: 40% !important; }\n  .u-width-3\\/5\\@tablet {\n    width: 60% !important; }\n  .u-width-4\\/5\\@tablet {\n    width: 80% !important; }\n  .u-width-5\\/5\\@tablet {\n    width: 100% !important; } }\n\n@media (min-width: 61.25em) {\n  .u-width-1\\/1\\@desktop {\n    width: 100% !important; }\n  .u-width-1\\/2\\@desktop {\n    width: 50% !important; }\n  .u-width-2\\/2\\@desktop {\n    width: 100% !important; }\n  .u-width-1\\/3\\@desktop {\n    width: 33.33333% !important; }\n  .u-width-2\\/3\\@desktop {\n    width: 66.66667% !important; }\n  .u-width-3\\/3\\@desktop {\n    width: 100% !important; }\n  .u-width-1\\/4\\@desktop {\n    width: 25% !important; }\n  .u-width-2\\/4\\@desktop {\n    width: 50% !important; }\n  .u-width-3\\/4\\@desktop {\n    width: 75% !important; }\n  .u-width-4\\/4\\@desktop {\n    width: 100% !important; }\n  .u-width-1\\/5\\@desktop {\n    width: 20% !important; }\n  .u-width-2\\/5\\@desktop {\n    width: 40% !important; }\n  .u-width-3\\/5\\@desktop {\n    width: 60% !important; }\n  .u-width-4\\/5\\@desktop {\n    width: 80% !important; }\n  .u-width-5\\/5\\@desktop {\n    width: 100% !important; } }\n\n@media (min-width: 81.25em) {\n  .u-width-1\\/1\\@wide {\n    width: 100% !important; }\n  .u-width-1\\/2\\@wide {\n    width: 50% !important; }\n  .u-width-2\\/2\\@wide {\n    width: 100% !important; }\n  .u-width-1\\/3\\@wide {\n    width: 33.33333% !important; }\n  .u-width-2\\/3\\@wide {\n    width: 66.66667% !important; }\n  .u-width-3\\/3\\@wide {\n    width: 100% !important; }\n  .u-width-1\\/4\\@wide {\n    width: 25% !important; }\n  .u-width-2\\/4\\@wide {\n    width: 50% !important; }\n  .u-width-3\\/4\\@wide {\n    width: 75% !important; }\n  .u-width-4\\/4\\@wide {\n    width: 100% !important; }\n  .u-width-1\\/5\\@wide {\n    width: 20% !important; }\n  .u-width-2\\/5\\@wide {\n    width: 40% !important; }\n  .u-width-3\\/5\\@wide {\n    width: 60% !important; }\n  .u-width-4\\/5\\@wide {\n    width: 80% !important; }\n  .u-width-5\\/5\\@wide {\n    width: 100% !important; } }\n\n/* ==========================================================================\n   #TEXT\n   ========================================================================== */\n/**\n * A collection of text related utility classes.\n */\n/**\n * Text Alignment.\n *\n * e.g. <div class=\"u-text--[center | left | right ]\"></div>\n */\n.u-text-left {\n  text-align: left; }\n\n.u-text-right {\n  text-align: right; }\n\n.u-text-center {\n  text-align: center; }\n\n/* ==========================================================================\n   #SPACINGS\n   ========================================================================== */\n/**\n * A slightly cut down version of the spacing utility from inuitcss:\n * https://github.com/inuitcss/inuitcss\n *\n * Utility classes to put specific spacing values onto elements. The below loop\n * will generate us a suite of classes like:\n *\n *\n * .u-[padding | margin]-top {}\n * .u-[padding | margin]-bottom {}\n * .u-[padding | margin] {}\n * .u-[padding | margin]-vertical {}\n * .u-[padding | margin]-[top | bottom]-none\n *\n * It also creates variants of the above for the project spacing\n * values declared in `settings.global`. E.g:\n *\n * u-[padding | margin]-top-huge {}\n * u-[padding | margin]-bottom-small {}\n */\n.u-padding {\n  padding: 24px !important; }\n\n.u-padding-medium {\n  padding: 48px !important; }\n\n.u-padding-large {\n  padding: 72px !important; }\n\n.u-padding-huge {\n  padding: 96px !important; }\n\n.u-padding-none {\n  padding: 0 !important; }\n\n.u-padding-top {\n  padding-top: 24px !important; }\n\n.u-padding-top-medium {\n  padding-top: 48px !important; }\n\n.u-padding-top-large {\n  padding-top: 72px !important; }\n\n.u-padding-top-huge {\n  padding-top: 96px !important; }\n\n.u-padding-top-none {\n  padding-top: 0 !important; }\n\n.u-padding-bottom {\n  padding-bottom: 24px !important; }\n\n.u-padding-bottom-medium {\n  padding-bottom: 48px !important; }\n\n.u-padding-bottom-large {\n  padding-bottom: 72px !important; }\n\n.u-padding-bottom-huge {\n  padding-bottom: 96px !important; }\n\n.u-padding-bottom-none {\n  padding-bottom: 0 !important; }\n\n.u-padding-vertical {\n  padding-top: 24px !important;\n  padding-bottom: 24px !important; }\n\n.u-padding-vertical-medium {\n  padding-top: 48px !important;\n  padding-bottom: 48px !important; }\n\n.u-padding-vertical-large {\n  padding-top: 72px !important;\n  padding-bottom: 72px !important; }\n\n.u-padding-vertical-huge {\n  padding-top: 96px !important;\n  padding-bottom: 96px !important; }\n\n.u-padding-vertical-none {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important; }\n\n.u-padding-horizontal {\n  padding-left: 24px !important;\n  padding-right: 24px !important; }\n\n.u-padding-horizontal-medium {\n  padding-left: 48px !important;\n  padding-right: 48px !important; }\n\n.u-padding-horizontal-large {\n  padding-left: 72px !important;\n  padding-right: 72px !important; }\n\n.u-padding-horizontal-huge {\n  padding-left: 96px !important;\n  padding-right: 96px !important; }\n\n.u-padding-horizontal-none {\n  padding-left: 0 !important;\n  padding-right: 0 !important; }\n\n.u-margin {\n  margin: 24px !important; }\n\n.u-margin-medium {\n  margin: 48px !important; }\n\n.u-margin-large {\n  margin: 72px !important; }\n\n.u-margin-huge {\n  margin: 96px !important; }\n\n.u-margin-none {\n  margin: 0 !important; }\n\n.u-margin-top {\n  margin-top: 24px !important; }\n\n.u-margin-top-medium {\n  margin-top: 48px !important; }\n\n.u-margin-top-large {\n  margin-top: 72px !important; }\n\n.u-margin-top-huge {\n  margin-top: 96px !important; }\n\n.u-margin-top-none {\n  margin-top: 0 !important; }\n\n.u-margin-bottom {\n  margin-bottom: 24px !important; }\n\n.u-margin-bottom-medium {\n  margin-bottom: 48px !important; }\n\n.u-margin-bottom-large {\n  margin-bottom: 72px !important; }\n\n.u-margin-bottom-huge {\n  margin-bottom: 96px !important; }\n\n.u-margin-bottom-none {\n  margin-bottom: 0 !important; }\n\n.u-margin-vertical {\n  margin-top: 24px !important;\n  margin-bottom: 24px !important; }\n\n.u-margin-vertical-medium {\n  margin-top: 48px !important;\n  margin-bottom: 48px !important; }\n\n.u-margin-vertical-large {\n  margin-top: 72px !important;\n  margin-bottom: 72px !important; }\n\n.u-margin-vertical-huge {\n  margin-top: 96px !important;\n  margin-bottom: 96px !important; }\n\n.u-margin-vertical-none {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important; }\n\n.u-margin-horizontal {\n  margin-left: 24px !important;\n  margin-right: 24px !important; }\n\n.u-margin-horizontal-medium {\n  margin-left: 48px !important;\n  margin-right: 48px !important; }\n\n.u-margin-horizontal-large {\n  margin-left: 72px !important;\n  margin-right: 72px !important; }\n\n.u-margin-horizontal-huge {\n  margin-left: 96px !important;\n  margin-right: 96px !important; }\n\n.u-margin-horizontal-none {\n  margin-left: 0 !important;\n  margin-right: 0 !important; }\n\n/* ==========================================================================\n   #HEADINGS\n   ========================================================================== */\n/**\n * Redefine all of our basic heading styles against utility classes so as to\n * allow for double stranded heading hierarchy, e.g. we semantically need an H2,\n * but we want it to be sized like an H1:\n *\n * Extends `elements.headings`\n *\n * <h2 class=\"u-h1\">Heading</h2>\n */\n.u-h1 {\n  font-size: 36px;\n  font-size: 2.25rem; }\n\n.u-h2 {\n  font-size: 28px;\n  font-size: 1.75rem; }\n\n.u-h3 {\n  font-size: 24px;\n  font-size: 1.5rem; }\n\n.u-h4 {\n  font-size: 20px;\n  font-size: 1.25rem; }\n\n.u-h5 {\n  font-size: 18px;\n  font-size: 1.125rem; }\n\n.u-h6 {\n  font-size: 16px;\n  font-size: 1rem; }\n\n/**\n * COMPONENTS\n */\n","@charset 'UTF-8';\n\n/**\n * LIBS\n * Normalize: https://github.com/necolas/normalize.css\n * mq:        https://github.com/sass-mq/sass-mq\n */\n@import 'normalize';\n@import './node_modules/sass-mq/mq';\n\n\n\n/**\n * SETTINGS\n * Global config files.\n */\n@import 'settings/settings.colours';\n@import 'settings/settings.global';\n@import 'settings/settings.mq';\n\n\n\n/**\n * TOOLS\n * Site-wide mixins and functions.\n */\n@import 'tools/tools.mixins';\n\n\n\n/**\n * GENERIC\n * Base/reset or globally available generic styles.\n */\n@import 'generic/generic.reset';\n@import 'generic/generic.global';\n\n\n\n/**\n * ELEMENTS.\n * HTML element specific (headings, images etc) default styles.\n */\n@import 'elements/elements.headings';\n\n\n\n/**\n * OBJECTS.\n * Abstracted object styles (design patterns etc).\n */\n@import 'objects/objects.icon';\n@import 'objects/objects.pack';\n@import 'objects/objects.layout';\n@import 'objects/objects.wrapper';\n@import 'objects/objects.list';\n\n\n\n/**\n * UTILITIES\n * High level, explicit selectors. Includes overrides and generic\n * helper classes.\n */\n@import 'utilities/utilities.display';\n@import 'utilities/utilities.widths';\n@import 'utilities/utilities.text';\n@import 'utilities/utilities.spacing';\n@import 'utilities/utilities.headings';\n\n\n\n/**\n * COMPONENTS\n */\n// List UI specific components here.\n","/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n */\n\n/* Document\n   ========================================================================== */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  line-height: 1.15; /* 2 */\n  -ms-text-size-adjust: 100%; /* 3 */\n  -webkit-text-size-adjust: 100%; /* 3 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in IE.\n */\n\nfigcaption,\nfigure,\nmain { /* 1 */\n  display: block;\n}\n\n/**\n * Add the correct margin in IE 8.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\n\na:active,\na:hover {\n  outline-width: 0;\n}\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"], /* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * 1. Add the correct display in IE 9-.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n */\n\ndetails, /* 1 */\nmenu {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Scripting\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\ncanvas {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/* Hidden\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10-.\n */\n\n[hidden] {\n  display: none;\n}\n","/* ==========================================================================\n   #COLOURS\n   ========================================================================== */\n\n/**\n * Define frequently used project level (e.g. brand) colours.\n *\n * Note: Please remove example colours below before use in a project.\n */\n$colours: (\n    red: (\n        default: #ff0,\n        light: #fe5656\n    )\n);\n\n\n\n/**\n * Function to get a colour value from the above map.\n *\n * Example usage:\n *\n * Default colour:  colour(red);\n * Shade selection: colour(red, light);\n */\n@function colour($colour, $shade: 'default') {\n    @return map-get(map-get($colours, $colour), $shade);\n}\n\n","/* ==========================================================================\n   #GLOBAL\n   ========================================================================== */\n\n/**\n * Project level generic configuration settings.\n *\n * This should include configuration for values such as base type styles,\n * UI config values (e.g. for consistent styling of components).\n *\n * These values should be updated on a per project basis.\n */\n\n\n\n// Default type styles. These value will be stored against the <html />\n// element (as rem units) to define base font size and line height.\n$project-font-size: 16px;\n$project-line-height: 24px;\n\n\n// Default font/text attribute styles.\n// Currently, this includes things such as font family and font colour.\n// We can add more values to this list where appropriate.\n$project-font-family: sans-serif;\n$project-font-colour: #333;\n$project-link-colour: #333;\n\n\n// Spacing.\n//\n// Defining global spacing units allow us to keep consistent gutters\n// (margin,padding) across the elements of the site.\n//\n// For consistent vertical rhythm we'll set the default spacing to be\n// the same as the line height but if this doesn't work out for the UI\n// just change the value.\n$project-spacing: $project-line-height !default;\n\n$project-spacing-small:  round($project-spacing * .5);\n$project-spacing-medium: round($project-spacing * 2);\n$project-spacing-large:  round($project-spacing * 3);\n$project-spacing-huge:   round($project-spacing * 4);\n","/* ==========================================================================\n   #MQ\n   ========================================================================== */\n\n/**\n * Configuration for the mq() sass mixin lib:\n * https://github.com/sass-mq/sass-mq\n */\n\n\n// Define the project breakpoints.\n// mq() will use the values below to construct the media queries.\n//\n// From the mq() docs because it just makes sense:\n//\n// \"Name your breakpoints in a way that creates a ubiquitous language\n// across team members. It will improve communication between\n// stakeholders, designers, developers, and testers.\"\n//\n// Example usage:\n//\n// The body background will be red when the viewport size is >= the\n// `tablet` breakpoint below and <= the `desktop` breakpoint.\n//\n// @include mq($from: tablet, $until: $desktop) {\n//      body {\n//          background: red;\n//      }\n// }\n\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n);\n","/* ==========================================================================\n   #MIXINS\n   ========================================================================== */\n/**\n * A collection of generic/handy(!) mixins.\n */\n\n\n/**\n * Generate a font size in rem units from a given pixel value.\n *\n * This is a bit of a cut down version of the inuit font-size mixin:\n * https://github.com/inuitcss/inuitcss/blob/develop/tools/_tools.font-size.scss\n *\n * 1. Old IE fallback. Maybe not necessary but we'll leave this in for now (stylint doesn't\n *    like it though).\n * 2. Font size in rem units.\n *\n * @param $font-size   [size of font needed in pixels. E.g. 16px]\n */\n/* stylelint-disable */\n@mixin font-size($font-size, $line-height: auto, $important: false) {\n    @if ($important == true) {\n        $important: !important;\n    } @else {\n        $important: null;\n    }\n\n\n    font-size: $font-size $important; // [1]\n    font-size: ($font-size / $project-font-size) * 1rem $important; // [2]\n}\n/* stylelint-enable */\n\n\n\n/**\n * Display related mixins.\n *\n * 1. Visually hide an element. This is an accessibile way of \"hiding\" an element from view\n *    while keeping it focusable (http://snook.ca/archives/html_and_css/hiding-content-for-accessibility)\n *\n * 2. Hide the text in an element.\n *\n * 3. http://www.cssmojo.com/the-very-latest-clearfix-reloaded/\n *\n */\n// [1]\n@mixin hidden-visually {\n    border: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n// [2]\n@mixin text-hide {\n    background-color: transparent;\n    border: 0;\n    color: transparent;\n    font: 0/0 a;\n    text-shadow: none;\n}\n\n// [3]\n@mixin clearfix {\n    &::after {\n        clear: both;\n        content: '';\n        display: table;\n    }\n}\n","/* ==========================================================================\n   #RESET\n   ========================================================================== */\n\n/**\n * Some futher generic global resets to extend normalize.\n *\n * 1. See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n * 2. inuitcss: Ensure the page always fills at least the entire height of the viewport.\n * 3. Remove default margins. We'll redeclare them in `generic.global`.\n */\n\nhtml {\n    box-sizing: border-box; // [1]\n    min-height: 100%; // [2]\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: inherit; // [1]\n}\n\n// [3]\n/* stylelint-disable */\nbody,\nh1, h2, h3, h4, h5, h6,\nblockquote, p, pre,\ndl, dd, ol, ul,\nfigure,\nhr,\nfieldset, legend {\n    margin:  0;\n    padding: 0;\n}\n/* stylelint-enable */\n\n\n\n/**\n * <nav /> element resets.\n * 1. Remove spacing from any <ul /> elements inside a <nav /> element.\n */\nnav ul { // [1]\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\nnav a {\n    text-decoration: none;\n}\n\n\n\n/**\n * <img /> element resets.\n * Credit: https://github.com/inuitcss/inuitcss/blob/develop/elements/_elements.images.scss\n *\n * 1. Setting `vertical-align` removes the whitespace that appears under `img`\n *    elements when they are dropped into a page as-is. Safer alternative to\n *    using `display: block;`.\n */\nimg {\n    max-width: 100%;\n    vertical-align: middle; // [1]\n}\n\n/**\n * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s\n *    not make the image fluid.\n */\nimg[width],\nimg[height] { // [1]\n    max-width: none;\n}\n\n\n\n/**\n * <form /> element resets.\n * 1. To override _normalize.css setting.\n */\nform {\n    input[type='search'] {\n        box-sizing: border-box; // [1]\n    }\n}\n","/* ==========================================================================\n   #GLOBAL\n   ========================================================================== */\n\n/**\n * Global level styles.\n * These should be styles that affect elements site wide (sort of like a project\n * specific reset).\n *\n * Base font sizes, colours or any other default styles for the project should be\n * defined in here.\n *\n * Global config defined in: settings/_global.scss\n *\n * 1. Always declare margins in the same direction:\n *    csswizardry.com/2012/06/single-direction-margin-declarations\n */\n\nhtml {\n    font-family: $project-font-family;\n    font-size: ($project-font-size / 16px) * 1em;\n    line-height: $project-line-height / $project-font-size;\n}\n\nbody {\n    color: $project-font-colour;\n}\n\n/* stylelint-disable */\n// [3]\naddress,\nh1, h2, h3, h4, h5, h6,\nblockquote, p, pre,\ndl, ol, ul,\nfigure,\nhr,\ntable,\nfieldset {\n    margin-bottom: $project-spacing;\n}\n/* stylelint-enable */\n\na {\n    color: $project-link-colour;\n}\n","/* ==========================================================================\n   #HEADINGS\n   ========================================================================== */\n\n/**\n * Default styles for headings 1 - 6.\n *\n * Anything more specific than the font family, weight and size or heading\n * variations should be applied via targeted classes, rather than the default.\n *\n * The $project-heading-sizes should be configured on a per-project basis\n * but these will make an ok default.\n */\n\n$project-heading-sizes: (\n    1: 36px,\n    2: 28px,\n    3: 24px,\n    4: 20px,\n    5: 18px,\n    6: 16px\n);\n\n@for $i from 1 through 6 {\n    h#{$i} {\n        @include font-size(map-get($project-heading-sizes, $i));\n    }\n}\n","/* ==========================================================================\n   #ICON\n   ========================================================================== */\n\n/**\n * SVG icons are part of the SVG spritesheet automatically generated by the\n * `gulp icons` task from any .svg files in ./svg.\n *\n * If no icons will be used in this project, you can safely remove this file.\n *\n * 1. Setting a default size incase the viewbox is massive.\n */\n\n.o-icon {\n    display: inline-block;\n    height: 40px; // [1]\n    width: 40px;  // [1]\n}\n","/* ==========================================================================\n   #PACK\n   ========================================================================== */\n\n/**\n * Source: inuitcss (https://github.com/inuitcss/inuitcss)\n *\n * The pack object simply causes any number of elements pack up horizontally to\n * automatically fill an equal, fluid width of their parent.\n *\n * 1. Fill all available space.\n * 2. Remove any leftover styling from lists.\n * 3. Cause children to be automatically equally sized.\n */\n\n.o-pack {\n    display: table;\n    margin-left: 0; /* [2] */\n    table-layout: fixed; /* [3] */\n    width: 100%; /* [1] */\n}\n\n\n/**\n* 1. Cause children to adopt table-like structure.\n* 2. Default item alignment is with the tops of each other.\n*/\n\n.o-pack__item {\n    display: table-cell; /* [1] */\n    vertical-align: top; /* [2] */\n\n\n    // Vertical alignment variants.\n    .o-pack--middle > & {\n        vertical-align: middle;\n    }\n\n    .o-pack--bottom > & {\n        vertical-align: bottom;\n    }\n}\n\n\n/**\n * Unequal-width items.\n */\n\n.o-pack--auto {\n    table-layout: auto;\n}\n","/* ==========================================================================\n   #LAYOUT\n   ========================================================================== */\n\n/**\n * Grid-like layout system from inuitcss: https://github.com/inuitcss/inuitcss\n *\n * The layout object provides us with a column-style layout system. This file\n * contains the basic structural elements, but classes should be complemented\n * with width utilities, for example:\n *\n *   <div class=\"o-layout\">\n *     <div class=\"o-layout__item  u-width-1/2\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2\">\n *     </div>\n *   </div>\n *\n * The above will create a two-column structure in which each column will\n * fluidly fill half of the width of the parent. We can have more complex\n * systems:\n *\n *   <div class=\"o-layout\">\n *     <div class=\"o-layout__item  u-width-1/1  u-width-1/3@tablet\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2  u-width-1/3@tablet\">\n *     </div>\n *     <div class=\"o-layout__item  u-width-1/2  u-width-1/3@tablet\">\n *     </div>\n *   </div>\n *\n * The above will create a system in which the first item will be 100% width\n * until we enter our tablet breakpoint, when it will become 33.333% width. The\n * second and third items will be 50% of their parent, until they also become\n * 33.333% width at the tablet breakpoint.\n *\n * We can also manipulate entire layout systems by adding a series of modifiers\n * to the `.o-layout` block. For example:\n *\n *   <div class=\"o-layout  o-layout--reverse\">\n *\n * This will reverse the displayed order of the system so that it runs in the\n * opposite order to our source, effectively flipping the system over.\n *\n *   <div class=\"o-layout  o-layout--[right|center]\">\n *\n * This will cause the system to fill up from either the centre or the right\n * hand side. Default behaviour is to fill up the layout system from the left.\n *\n * There are plenty more options available to us: explore them below.\n */\n\n// By default we use the `font-size: 0;` trick to remove whitespace between\n// items. Set this to true in order to use a markup-based strategy like\n// commenting out whitespace or minifying HTML.\n$layout-use-markup-fix: false !default;\n\n// Spacing values are determined based on the project's global line height (i.e\n// your baseline grid). By default, the layout will inherit the default\n// project spacing value to keep consistent vertical rhythm.\n$layout-global-spacing-unit: $project-spacing;\n$layout-global-font-size: $project-font-size;\n\n\n\n/* Default/mandatory classes.\n   ========================================================================== */\n\n/**\n * 1. Allows us to use the layout object on any type of element.\n * 2. We need to defensively reset any box-model properties.\n * 3. Use the negative margin trick for multi-row grids:\n *    http://csswizardry.com/2011/08/building-better-grid-systems/\n */\n\n.o-layout {\n    display: block; /* [1] */\n    list-style: none; /* [1] */\n    margin: 0; /* [2] */\n    margin-left: -$layout-global-spacing-unit; /* [3] */\n    padding: 0; /* [2] */\n\n    @if ($layout-use-markup-fix == false) {\n        font-size: 0;\n    }\n}\n\n\n/**\n* 1. Required in order to combine fluid widths with fixed gutters.\n* 2. Allows us to manipulate grids vertically, with text-level properties,\n*    etc.\n* 3. Default item alignment is with the tops of each other, like most\n*    traditional grid/layout systems.\n* 4. By default, all layout items are full-width (mobile first).\n* 5. Gutters provided by left padding:\n*    http://csswizardry.com/2011/08/building-better-grid-systems/\n* 6. Fallback for old IEs not supporting `rem` values.\n*/\n\n.o-layout__item {\n    box-sizing: border-box; /* [1] */\n    display: inline-block; /* [2] */\n    padding-left: $layout-global-spacing-unit; /* [5] */\n    vertical-align: top; /* [3] */\n    width: 100%; /* [4] */\n\n    @if ($layout-use-markup-fix == false) {\n        /* stylelint-disable */\n        font-size: $layout-global-font-size; /* [6] */\n        font-size: 1rem;\n        /* stylelint-enable */\n    }\n}\n\n\n\n\n\n/* Vertical alignment modifiers.\n   ========================================================================== */\n\n/**\n * Align all grid items to the middles of each other.\n */\n.o-layout--middle {\n    > .o-layout__item {\n        vertical-align: middle;\n    }\n}\n\n\n/**\n * Align all grid items to the bottoms of each other.\n */\n.o-layout--bottom {\n    > .o-layout__item {\n        vertical-align: bottom;\n    }\n}\n\n\n\n\n\n/* Fill order modifiers.\n   ========================================================================== */\n\n/**\n * Fill up the layout system from the centre.\n */\n.o-layout--center {\n    text-align: center;\n\n    > .o-layout__item {\n        text-align: left;\n    }\n}\n\n\n/**\n * Fill up the layout system from the right-hand side.\n */\n.o-layout--right {\n    text-align: right;\n\n    > .o-layout__item {\n        text-align: left;\n    }\n}\n\n\n/**\n * Fill up the layout system from the left-hand side. This will likely only be\n * needed when using in conjunction with `.o-layout--reverse`.\n*/\n.o-layout--left {\n    text-align: left;\n\n    > .o-layout__item {\n        text-align: left;\n    }\n}\n\n\n/**\n * Reverse the rendered order of the grid system.\n */\n.o-layout--reverse {\n    direction: rtl;\n\n    > .o-layout__item {\n        direction: ltr;\n    }\n}\n\n\n\n\n\n/* Auto-widths modifier.\n   ========================================================================== */\n\n/**\n * Cause layout items to take up a non-explicit amount of width.\n */\n\n.o-layout--auto {\n    > .o-layout__item {\n        width: auto;\n    }\n}\n","/* ==========================================================================\n   #WRAPPER\n   ========================================================================== */\n\n/**\n * Page-level constraining and wrapping elements.\n *\n * 1. max-width of the wrapper element (px).\n */\n\n// [1]\n$project-wrapper-width: 1366px !default;\n\n.o-wrapper {\n    @include clearfix;\n\n    margin: 0 auto;\n    max-width: $project-wrapper-width;\n    padding-left: $project-spacing;\n    padding-right: $project-spacing;\n}\n","/* ==========================================================================\n   #LIST\n   ========================================================================== */\n\n\n/**\n * Inline list.\n */\n.o-list-inline {\n    list-style: none;\n    margin: 0;\n}\n\n.o-list-inline__item {\n    display: inline-block;\n}\n\n\n\n/**\n * Bare lists mate.\n */\n.o-list-bare {\n    list-style: none;\n    margin: 0;\n}\n","/* ==========================================================================\n   #DISPLAY\n   ========================================================================== */\n\n/**\n * A place for display related utility classes.\n */\n\n\n\n// Visually hide an element.\n// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility)\n.u-hidden-visually {\n    @include hidden-visually;\n}\n\n\n// Good old clearfix.\n.u-clearfix {\n    @include clearfix;\n}\n","/* ==========================================================================\n   #WIDTHS\n   ========================================================================== */\n\n/**\n * Width utility from inuitcss: https://github.com/inuitcss/inuitcss\n *\n * inuitcss generates a series of utility classes that give a fluid width to\n * whichever element they’re applied, e.g.:\n *\n *   <img src=\"\" alt=\"\" class=\"u-width-1/2\" />\n *\n * These classes are most commonly used in conjunction with our layout system,\n * e.g.:\n *\n *   <div class=\"o-layout__item  u-width-1/2\">\n *\n * By default, inuitcss will also generate responsive variants of each of these\n * classes by using your Sass MQ configuration, e.g.:\n *\n *   <div class=\"o-layout__item  u-width-1/1  u-width-1/2@tablet  u-width-1/3@desktop\">\n *\n * Optionally, inuitcss can generate offset classes which can push and pull\n * elements left and right by a specified amount, e.g.:\n *\n *   <div class=\"o-layout__item  u-width-2/3  u-pull-1/3\">\n *\n * This is useful for making very granular changes to the rendered order of\n * items in a layout.\n *\n * N.B. This option is turned off by default.\n */\n\n\n\n\n\n// Which fractions would you like in your grid system(s)? By default, inuitcss\n// provides you fractions of one whole, halves, thirds, quarters and fifths,\n// e.g.:\n//\n//   .u-width-1/2\n//   .u-width-2/5\n//   .u-width-3/4\n//   .u-width-2/3\n\n$inuit-fractions: 1 2 3 4 5 !default;\n\n\n\n\n\n// Optionally, inuitcss can generate classes to offset items by a certain width.\n// Would you like to generate these types of class as well? E.g.:\n//\n//   .u-push-1/3\n//   .u-pull-2/4\n//   .u-pull-1/5\n//   .u-push-2/3\n\n$inuit-offsets: false !default;\n\n\n\n\n\n// By default, inuitcss uses fractions-like classes like `<div class=\"u-width-1/4\">`.\n// You can change the `/` to whatever you fancy with this variable.\n$inuit-widths-delimiter: \\/ !default;\n\n\n\n\n\n// When using Sass-MQ, this defines the separator for the breakpoints suffix\n// in the class name. By default, we are generating the responsive suffixes\n// for the classes with a `@` symbol so you get classes like:\n// <div class=\"u-width-3/12@mobile\">\n$inuit-widths-breakpoint-separator: \\@ !default;\n\n\n\n\n\n// A mixin to spit out our width classes. Pass in the columns we want the widths\n// to have, and an optional suffix for responsive widths. E.g. to create thirds\n// and quarters for a small breakpoint:\n//\n// @include widths(3 4, -sm);\n\n@mixin inuit-widths($columns, $breakpoint: null) {\n\n    // Loop through the number of columns for each denominator of our fractions.\n    @each $denominator in $columns {\n\n        // Begin creating a numerator for our fraction up until we hit the\n        // denominator.\n        @for $numerator from 1 through $denominator {\n\n            // Build a class in the format `.u-width-3/4[@<breakpoint>]`.\n            .u-width-#{$numerator}#{$inuit-widths-delimiter}#{$denominator}#{$breakpoint} {\n                width: ($numerator / $denominator) * 100% !important;\n            }\n\n            @if ($inuit-offsets == true) {\n                /**\n                 * 1. Reset any leftover or conflicting `left`/`right` values.\n                 */\n\n                // Build a class in the format `.u-push-1/2[@<breakpoint>]`.\n                .u-push-#{$numerator}#{$inuit-widths-delimiter}#{$denominator}#{$breakpoint} {\n                    left: ($numerator / $denominator) * 100% !important;\n                    position: relative !important;\n                    right: auto !important; /* [1] */\n                }\n\n                // Build a class in the format `.u-pull-5/6[@<breakpoint>]`.\n                .u-pull-#{$numerator}#{$inuit-widths-delimiter}#{$denominator}#{$breakpoint} {\n                    left: auto !important; /* [1] */\n                    position: relative !important;\n                    right: ($numerator / $denominator) * 100% !important;\n                }\n            }\n        }\n    }\n}\n\n\n\n\n/**\n * A series of width helper classes that you can use to size things like grid\n * systems. Classes take a fraction-like format (e.g. `.u-width-2/3`). Use these in\n * your markup:\n *\n * <div class=\"u-width-7/12\">\n *\n * The following will generate widths helper classes based on the fractions\n * defined in the `$inuit-fractions` list.\n */\n\n@include inuit-widths($inuit-fractions);\n\n\n\n\n/**\n * If we’re using Sass-MQ, automatically generate grid system(s) for each of our\n * defined breakpoints, and give them a Responsive Suffix, e.g.:\n *\n * <div class=\"u-width-3/12@mobile\">\n */\n\n@if (variable-exists(mq-breakpoints)) {\n    @each $bp-name, $bp-value in $mq-breakpoints {\n        @include mq($from: $bp-name) {\n            @include inuit-widths($inuit-fractions, #{$inuit-widths-breakpoint-separator}#{$bp-name});\n        }\n    }\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","/* ==========================================================================\n   #TEXT\n   ========================================================================== */\n\n/**\n * A collection of text related utility classes.\n */\n\n\n\n/**\n * Text Alignment.\n *\n * e.g. <div class=\"u-text--[center | left | right ]\"></div>\n */\n$u-align-values: (\n    left,\n    right,\n    center,\n);\n\n@each $val in $u-align-values {\n    .u-text-#{$val} {\n        text-align: $val;\n    }\n}\n","/* ==========================================================================\n   #SPACINGS\n   ========================================================================== */\n\n/**\n * A slightly cut down version of the spacing utility from inuitcss:\n * https://github.com/inuitcss/inuitcss\n *\n * Utility classes to put specific spacing values onto elements. The below loop\n * will generate us a suite of classes like:\n *\n *\n * .u-[padding | margin]-top {}\n * .u-[padding | margin]-bottom {}\n * .u-[padding | margin] {}\n * .u-[padding | margin]-vertical {}\n * .u-[padding | margin]-[top | bottom]-none\n *\n * It also creates variants of the above for the project spacing\n * values declared in `settings.global`. E.g:\n *\n * u-[padding | margin]-top-huge {}\n * u-[padding | margin]-bottom-small {}\n */\n\n$u-spacing-properties: (\n    'padding': 'padding',\n    'margin': 'margin',\n) !default;\n\n$u-spacing-directions: (\n    null: null,\n    '-top': '-top',\n    '-bottom': '-bottom',\n    '-vertical': '-top' '-bottom',\n    '-horizontal': '-left' '-right'\n) !default;\n\n$u-spacing-sizes: (\n    null: $project-spacing,\n    '-medium': $project-spacing-medium,\n    '-large': $project-spacing-large,\n    '-huge': $project-spacing-huge,\n    '-none': 0\n) !default;\n\n\n@each $prop-ns, $prop in $u-spacing-properties {\n    @each $dir-ns, $dir-rules in $u-spacing-directions {\n        @each $size-ns, $size in $u-spacing-sizes {\n            .u-#{$prop-ns}#{$dir-ns}#{$size-ns} {\n                @each $dir in $dir-rules {\n                    #{$prop}#{$dir}: $size !important;\n                }\n            }\n        }\n    }\n}\n","/* ==========================================================================\n   #HEADINGS\n   ========================================================================== */\n\n/**\n * Redefine all of our basic heading styles against utility classes so as to\n * allow for double stranded heading hierarchy, e.g. we semantically need an H2,\n * but we want it to be sized like an H1:\n *\n * Extends `elements.headings`\n *\n * <h2 class=\"u-h1\">Heading</h2>\n */\n\n@for $i from 1 through 6 {\n    .u-h#{$i} {\n        @include font-size(map-get($project-heading-sizes, $i));\n    }\n}\n"]}