@charset "UTF-8";
/**
 * LIBS
 * Normalize: https://github.com/necolas/normalize.css
 * mq:        https://github.com/sass-mq/sass-mq
 */
/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/**
 * SETTINGS
 * Global config files.
 */
/* ==========================================================================
   #COLOURS
   ========================================================================== */
/**
 * Define frequently used project level (e.g. brand) colours.
 *
 * Note: Please remove example colours below before use in a project.
 */
/**
 * Function to get a colour value from the above map.
 *
 * Example usage:
 *
 * Default colour:  colour(red);
 * Shade selection: colour(red, light);
 */
/* ==========================================================================
   #GLOBAL
   ========================================================================== */
/**
 * Project level generic configuration settings.
 *
 * This should include configuration for values such as base type styles,
 * UI config values (e.g. for consistent styling of components).
 *
 * These values should be updated on a per project basis.
 */
/* ==========================================================================
   #MQ
   ========================================================================== */
/**
 * Configuration for the mq() sass mixin lib:
 * https://github.com/sass-mq/sass-mq
 */
/**
 * TOOLS
 * Site-wide mixins and functions.
 */
/* ==========================================================================
   #MIXINS
   ========================================================================== */
/**
 * A collection of generic/handy(!) mixins.
 */
/**
 * Generate a font size in rem units from a given pixel value.
 *
 * This is a bit of a cut down version of the inuit font-size mixin:
 * https://github.com/inuitcss/inuitcss/blob/develop/tools/_tools.font-size.scss
 *
 * 1. Old IE fallback. Maybe not necessary but we'll leave this in for now (stylint doesn't
 *    like it though).
 * 2. Font size in rem units.
 *
 * @param $font-size   [size of font needed in pixels. E.g. 16px]
 */
/* stylelint-disable */
/* stylelint-enable */
/**
 * Display related mixins.
 *
 * 1. Visually hide an element. This is an accessibile way of "hiding" an element from view
 *    while keeping it focusable (http://snook.ca/archives/html_and_css/hiding-content-for-accessibility)
 *
 * 2. Hide the text in an element.
 *
 * 3. http://www.cssmojo.com/the-very-latest-clearfix-reloaded/
 *
 */
/**
 * GENERIC
 * Base/reset or globally available generic styles.
 */
/* ==========================================================================
   #RESET
   ========================================================================== */
/**
 * Some futher generic global resets to extend normalize.
 *
 * 1. See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 * 2. inuitcss: Ensure the page always fills at least the entire height of the viewport.
 * 3. Remove default margins. We'll redeclare them in `generic.global`.
 */
html {
  box-sizing: border-box;
  min-height: 100%; }

*,
*::before,
*::after {
  box-sizing: inherit; }

/* stylelint-disable */
body,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, dd, ol, ul,
figure,
hr,
fieldset, legend {
  margin: 0;
  padding: 0; }

/* stylelint-enable */
/**
 * <nav /> element resets.
 * 1. Remove spacing from any <ul /> elements inside a <nav /> element.
 */
nav ul {
  list-style: none;
  margin: 0;
  padding: 0; }

nav a {
  text-decoration: none; }

/**
 * <img /> element resets.
 * Credit: https://github.com/inuitcss/inuitcss/blob/develop/elements/_elements.images.scss
 *
 * 1. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  vertical-align: middle; }

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
img[width],
img[height] {
  max-width: none; }

/**
 * <form /> element resets.
 * 1. To override _normalize.css setting.
 */
form input[type='search'] {
  box-sizing: border-box; }

/* ==========================================================================
   #GLOBAL
   ========================================================================== */
/**
 * Global level styles.
 * These should be styles that affect elements site wide (sort of like a project
 * specific reset).
 *
 * Base font sizes, colours or any other default styles for the project should be
 * defined in here.
 *
 * Global config defined in: settings/_global.scss
 *
 * 1. Always declare margins in the same direction:
 *    csswizardry.com/2012/06/single-direction-margin-declarations
 */
html {
  font-family: sans-serif;
  font-size: 1em;
  line-height: 1.5; }

body {
  color: #333; }

/* stylelint-disable */
address,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, ol, ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 24px; }

/* stylelint-enable */
a {
  color: #333; }

/**
 * ELEMENTS.
 * HTML element specific (headings, images etc) default styles.
 */
/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Default styles for headings 1 - 6.
 *
 * Anything more specific than the font family, weight and size or heading
 * variations should be applied via targeted classes, rather than the default.
 *
 * The $project-heading-sizes should be configured on a per-project basis
 * but these will make an ok default.
 */
h1 {
  font-size: 36px;
  font-size: 2.25rem; }

h2 {
  font-size: 28px;
  font-size: 1.75rem; }

h3 {
  font-size: 24px;
  font-size: 1.5rem; }

h4 {
  font-size: 20px;
  font-size: 1.25rem; }

h5 {
  font-size: 18px;
  font-size: 1.125rem; }

h6 {
  font-size: 16px;
  font-size: 1rem; }

/**
 * OBJECTS.
 * Abstracted object styles (design patterns etc).
 */
/* ==========================================================================
   #ICON
   ========================================================================== */
/**
 * SVG icons are part of the SVG spritesheet automatically generated by the
 * `gulp icons` task from any .svg files in ./svg.
 *
 * If no icons will be used in this project, you can safely remove this file.
 *
 * 1. Setting a default size incase the viewbox is massive.
 */
.o-icon {
  display: inline-block;
  height: 40px;
  width: 40px; }

/* ==========================================================================
   #PACK
   ========================================================================== */
/**
 * Source: inuitcss (https://github.com/inuitcss/inuitcss)
 *
 * The pack object simply causes any number of elements pack up horizontally to
 * automatically fill an equal, fluid width of their parent.
 *
 * 1. Fill all available space.
 * 2. Remove any leftover styling from lists.
 * 3. Cause children to be automatically equally sized.
 */
.o-pack {
  display: table;
  margin-left: 0;
  /* [2] */
  table-layout: fixed;
  /* [3] */
  width: 100%;
  /* [1] */ }

/**
* 1. Cause children to adopt table-like structure.
* 2. Default item alignment is with the tops of each other.
*/
.o-pack__item {
  display: table-cell;
  /* [1] */
  vertical-align: top;
  /* [2] */ }
  .o-pack--middle > .o-pack__item {
    vertical-align: middle; }
  .o-pack--bottom > .o-pack__item {
    vertical-align: bottom; }

/**
 * Unequal-width items.
 */
.o-pack--auto {
  table-layout: auto; }

/* ==========================================================================
   #LAYOUT
   ========================================================================== */
/**
 * Grid-like layout system from inuitcss: https://github.com/inuitcss/inuitcss
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-width-1/2">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-width-1/1  u-width-1/3@tablet">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2  u-width-1/3@tablet">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2  u-width-1/3@tablet">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our tablet breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the tablet breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-layout` block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */
/* Default/mandatory classes.
   ========================================================================== */
/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-layout {
  display: block;
  /* [1] */
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  margin-left: -24px;
  /* [3] */
  padding: 0;
  /* [2] */
  font-size: 0; }

/**
* 1. Required in order to combine fluid widths with fixed gutters.
* 2. Allows us to manipulate grids vertically, with text-level properties,
*    etc.
* 3. Default item alignment is with the tops of each other, like most
*    traditional grid/layout systems.
* 4. By default, all layout items are full-width (mobile first).
* 5. Gutters provided by left padding:
*    http://csswizardry.com/2011/08/building-better-grid-systems/
* 6. Fallback for old IEs not supporting `rem` values.
*/
.o-layout__item {
  box-sizing: border-box;
  /* [1] */
  display: inline-block;
  /* [2] */
  padding-left: 24px;
  /* [5] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  /* stylelint-disable */
  font-size: 16px;
  /* [6] */
  font-size: 1rem;
  /* stylelint-enable */ }

/* Vertical alignment modifiers.
   ========================================================================== */
/**
 * Align all grid items to the middles of each other.
 */
.o-layout--middle > .o-layout__item {
  vertical-align: middle; }

/**
 * Align all grid items to the bottoms of each other.
 */
.o-layout--bottom > .o-layout__item {
  vertical-align: bottom; }

/* Fill order modifiers.
   ========================================================================== */
/**
 * Fill up the layout system from the centre.
 */
.o-layout--center {
  text-align: center; }
  .o-layout--center > .o-layout__item {
    text-align: left; }

/**
 * Fill up the layout system from the right-hand side.
 */
.o-layout--right {
  text-align: right; }
  .o-layout--right > .o-layout__item {
    text-align: left; }

/**
 * Fill up the layout system from the left-hand side. This will likely only be
 * needed when using in conjunction with `.o-layout--reverse`.
*/
.o-layout--left {
  text-align: left; }
  .o-layout--left > .o-layout__item {
    text-align: left; }

/**
 * Reverse the rendered order of the grid system.
 */
.o-layout--reverse {
  direction: rtl; }
  .o-layout--reverse > .o-layout__item {
    direction: ltr; }

/* Auto-widths modifier.
   ========================================================================== */
/**
 * Cause layout items to take up a non-explicit amount of width.
 */
.o-layout--auto > .o-layout__item {
  width: auto; }

/* ==========================================================================
   #WRAPPER
   ========================================================================== */
/**
 * Page-level constraining and wrapping elements.
 *
 * 1. max-width of the wrapper element (px).
 */
.o-wrapper {
  margin: 0 auto;
  max-width: 1366px;
  padding-left: 24px;
  padding-right: 24px; }
  .o-wrapper::after {
    clear: both;
    content: '';
    display: table; }

/* ==========================================================================
   #LIST
   ========================================================================== */
/**
 * Inline list.
 */
.o-list-inline {
  list-style: none;
  margin: 0; }

.o-list-inline__item {
  display: inline-block; }

/**
 * Bare lists mate.
 */
.o-list-bare {
  list-style: none;
  margin: 0; }

/**
 * UTILITIES
 * High level, explicit selectors. Includes overrides and generic
 * helper classes.
 */
/* ==========================================================================
   #DISPLAY
   ========================================================================== */
/**
 * A place for display related utility classes.
 */
.u-hidden-visually {
  border: 0;
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px; }

.u-clearfix::after {
  clear: both;
  content: '';
  display: table; }

/* ==========================================================================
   #WIDTHS
   ========================================================================== */
/**
 * Width utility from inuitcss: https://github.com/inuitcss/inuitcss
 *
 * inuitcss generates a series of utility classes that give a fluid width to
 * whichever element they’re applied, e.g.:
 *
 *   <img src="" alt="" class="u-width-1/2" />
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item  u-width-1/2">
 *
 * By default, inuitcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item  u-width-1/1  u-width-1/2@tablet  u-width-1/3@desktop">
 *
 * Optionally, inuitcss can generate offset classes which can push and pull
 * elements left and right by a specified amount, e.g.:
 *
 *   <div class="o-layout__item  u-width-2/3  u-pull-1/3">
 *
 * This is useful for making very granular changes to the rendered order of
 * items in a layout.
 *
 * N.B. This option is turned off by default.
 */
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-width-2/3`). Use these in
 * your markup:
 *
 * <div class="u-width-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$inuit-fractions` list.
 */
.u-width-1\/1 {
  width: 100% !important; }

.u-width-1\/2 {
  width: 50% !important; }

.u-width-2\/2 {
  width: 100% !important; }

.u-width-1\/3 {
  width: 33.33333% !important; }

.u-width-2\/3 {
  width: 66.66667% !important; }

.u-width-3\/3 {
  width: 100% !important; }

.u-width-1\/4 {
  width: 25% !important; }

.u-width-2\/4 {
  width: 50% !important; }

.u-width-3\/4 {
  width: 75% !important; }

.u-width-4\/4 {
  width: 100% !important; }

.u-width-1\/5 {
  width: 20% !important; }

.u-width-2\/5 {
  width: 40% !important; }

.u-width-3\/5 {
  width: 60% !important; }

.u-width-4\/5 {
  width: 80% !important; }

.u-width-5\/5 {
  width: 100% !important; }

/**
 * If we’re using Sass-MQ, automatically generate grid system(s) for each of our
 * defined breakpoints, and give them a Responsive Suffix, e.g.:
 *
 * <div class="u-width-3/12@mobile">
 */
@media (min-width: 20em) {
  .u-width-1\/1\@mobile {
    width: 100% !important; }
  .u-width-1\/2\@mobile {
    width: 50% !important; }
  .u-width-2\/2\@mobile {
    width: 100% !important; }
  .u-width-1\/3\@mobile {
    width: 33.33333% !important; }
  .u-width-2\/3\@mobile {
    width: 66.66667% !important; }
  .u-width-3\/3\@mobile {
    width: 100% !important; }
  .u-width-1\/4\@mobile {
    width: 25% !important; }
  .u-width-2\/4\@mobile {
    width: 50% !important; }
  .u-width-3\/4\@mobile {
    width: 75% !important; }
  .u-width-4\/4\@mobile {
    width: 100% !important; }
  .u-width-1\/5\@mobile {
    width: 20% !important; }
  .u-width-2\/5\@mobile {
    width: 40% !important; }
  .u-width-3\/5\@mobile {
    width: 60% !important; }
  .u-width-4\/5\@mobile {
    width: 80% !important; }
  .u-width-5\/5\@mobile {
    width: 100% !important; } }

@media (min-width: 46.25em) {
  .u-width-1\/1\@tablet {
    width: 100% !important; }
  .u-width-1\/2\@tablet {
    width: 50% !important; }
  .u-width-2\/2\@tablet {
    width: 100% !important; }
  .u-width-1\/3\@tablet {
    width: 33.33333% !important; }
  .u-width-2\/3\@tablet {
    width: 66.66667% !important; }
  .u-width-3\/3\@tablet {
    width: 100% !important; }
  .u-width-1\/4\@tablet {
    width: 25% !important; }
  .u-width-2\/4\@tablet {
    width: 50% !important; }
  .u-width-3\/4\@tablet {
    width: 75% !important; }
  .u-width-4\/4\@tablet {
    width: 100% !important; }
  .u-width-1\/5\@tablet {
    width: 20% !important; }
  .u-width-2\/5\@tablet {
    width: 40% !important; }
  .u-width-3\/5\@tablet {
    width: 60% !important; }
  .u-width-4\/5\@tablet {
    width: 80% !important; }
  .u-width-5\/5\@tablet {
    width: 100% !important; } }

@media (min-width: 61.25em) {
  .u-width-1\/1\@desktop {
    width: 100% !important; }
  .u-width-1\/2\@desktop {
    width: 50% !important; }
  .u-width-2\/2\@desktop {
    width: 100% !important; }
  .u-width-1\/3\@desktop {
    width: 33.33333% !important; }
  .u-width-2\/3\@desktop {
    width: 66.66667% !important; }
  .u-width-3\/3\@desktop {
    width: 100% !important; }
  .u-width-1\/4\@desktop {
    width: 25% !important; }
  .u-width-2\/4\@desktop {
    width: 50% !important; }
  .u-width-3\/4\@desktop {
    width: 75% !important; }
  .u-width-4\/4\@desktop {
    width: 100% !important; }
  .u-width-1\/5\@desktop {
    width: 20% !important; }
  .u-width-2\/5\@desktop {
    width: 40% !important; }
  .u-width-3\/5\@desktop {
    width: 60% !important; }
  .u-width-4\/5\@desktop {
    width: 80% !important; }
  .u-width-5\/5\@desktop {
    width: 100% !important; } }

@media (min-width: 81.25em) {
  .u-width-1\/1\@wide {
    width: 100% !important; }
  .u-width-1\/2\@wide {
    width: 50% !important; }
  .u-width-2\/2\@wide {
    width: 100% !important; }
  .u-width-1\/3\@wide {
    width: 33.33333% !important; }
  .u-width-2\/3\@wide {
    width: 66.66667% !important; }
  .u-width-3\/3\@wide {
    width: 100% !important; }
  .u-width-1\/4\@wide {
    width: 25% !important; }
  .u-width-2\/4\@wide {
    width: 50% !important; }
  .u-width-3\/4\@wide {
    width: 75% !important; }
  .u-width-4\/4\@wide {
    width: 100% !important; }
  .u-width-1\/5\@wide {
    width: 20% !important; }
  .u-width-2\/5\@wide {
    width: 40% !important; }
  .u-width-3\/5\@wide {
    width: 60% !important; }
  .u-width-4\/5\@wide {
    width: 80% !important; }
  .u-width-5\/5\@wide {
    width: 100% !important; } }

/* ==========================================================================
   #TEXT
   ========================================================================== */
/**
 * A collection of text related utility classes.
 */
/**
 * Text Alignment.
 *
 * e.g. <div class="u-text--[center | left | right ]"></div>
 */
.u-text-left {
  text-align: left; }

.u-text-right {
  text-align: right; }

.u-text-center {
  text-align: center; }

/* ==========================================================================
   #SPACINGS
   ========================================================================== */
/**
 * A slightly cut down version of the spacing utility from inuitcss:
 * https://github.com/inuitcss/inuitcss
 *
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *
 * .u-[padding | margin]-top {}
 * .u-[padding | margin]-bottom {}
 * .u-[padding | margin] {}
 * .u-[padding | margin]-vertical {}
 * .u-[padding | margin]-[top | bottom]-none
 *
 * It also creates variants of the above for the project spacing
 * values declared in `settings.global`. E.g:
 *
 * u-[padding | margin]-top-huge {}
 * u-[padding | margin]-bottom-small {}
 */
.u-padding {
  padding: 24px !important; }

.u-padding-medium {
  padding: 48px !important; }

.u-padding-large {
  padding: 72px !important; }

.u-padding-huge {
  padding: 96px !important; }

.u-padding-none {
  padding: 0 !important; }

.u-padding-top {
  padding-top: 24px !important; }

.u-padding-top-medium {
  padding-top: 48px !important; }

.u-padding-top-large {
  padding-top: 72px !important; }

.u-padding-top-huge {
  padding-top: 96px !important; }

.u-padding-top-none {
  padding-top: 0 !important; }

.u-padding-bottom {
  padding-bottom: 24px !important; }

.u-padding-bottom-medium {
  padding-bottom: 48px !important; }

.u-padding-bottom-large {
  padding-bottom: 72px !important; }

.u-padding-bottom-huge {
  padding-bottom: 96px !important; }

.u-padding-bottom-none {
  padding-bottom: 0 !important; }

.u-padding-vertical {
  padding-top: 24px !important;
  padding-bottom: 24px !important; }

.u-padding-vertical-medium {
  padding-top: 48px !important;
  padding-bottom: 48px !important; }

.u-padding-vertical-large {
  padding-top: 72px !important;
  padding-bottom: 72px !important; }

.u-padding-vertical-huge {
  padding-top: 96px !important;
  padding-bottom: 96px !important; }

.u-padding-vertical-none {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

.u-padding-horizontal {
  padding-left: 24px !important;
  padding-right: 24px !important; }

.u-padding-horizontal-medium {
  padding-left: 48px !important;
  padding-right: 48px !important; }

.u-padding-horizontal-large {
  padding-left: 72px !important;
  padding-right: 72px !important; }

.u-padding-horizontal-huge {
  padding-left: 96px !important;
  padding-right: 96px !important; }

.u-padding-horizontal-none {
  padding-left: 0 !important;
  padding-right: 0 !important; }

.u-margin {
  margin: 24px !important; }

.u-margin-medium {
  margin: 48px !important; }

.u-margin-large {
  margin: 72px !important; }

.u-margin-huge {
  margin: 96px !important; }

.u-margin-none {
  margin: 0 !important; }

.u-margin-top {
  margin-top: 24px !important; }

.u-margin-top-medium {
  margin-top: 48px !important; }

.u-margin-top-large {
  margin-top: 72px !important; }

.u-margin-top-huge {
  margin-top: 96px !important; }

.u-margin-top-none {
  margin-top: 0 !important; }

.u-margin-bottom {
  margin-bottom: 24px !important; }

.u-margin-bottom-medium {
  margin-bottom: 48px !important; }

.u-margin-bottom-large {
  margin-bottom: 72px !important; }

.u-margin-bottom-huge {
  margin-bottom: 96px !important; }

.u-margin-bottom-none {
  margin-bottom: 0 !important; }

.u-margin-vertical {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

.u-margin-vertical-medium {
  margin-top: 48px !important;
  margin-bottom: 48px !important; }

.u-margin-vertical-large {
  margin-top: 72px !important;
  margin-bottom: 72px !important; }

.u-margin-vertical-huge {
  margin-top: 96px !important;
  margin-bottom: 96px !important; }

.u-margin-vertical-none {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

.u-margin-horizontal {
  margin-left: 24px !important;
  margin-right: 24px !important; }

.u-margin-horizontal-medium {
  margin-left: 48px !important;
  margin-right: 48px !important; }

.u-margin-horizontal-large {
  margin-left: 72px !important;
  margin-right: 72px !important; }

.u-margin-horizontal-huge {
  margin-left: 96px !important;
  margin-right: 96px !important; }

.u-margin-horizontal-none {
  margin-left: 0 !important;
  margin-right: 0 !important; }

/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Redefine all of our basic heading styles against utility classes so as to
 * allow for double stranded heading hierarchy, e.g. we semantically need an H2,
 * but we want it to be sized like an H1:
 *
 * Extends `elements.headings`
 *
 * <h2 class="u-h1">Heading</h2>
 */
.u-h1 {
  font-size: 36px;
  font-size: 2.25rem; }

.u-h2 {
  font-size: 28px;
  font-size: 1.75rem; }

.u-h3 {
  font-size: 24px;
  font-size: 1.5rem; }

.u-h4 {
  font-size: 20px;
  font-size: 1.25rem; }

.u-h5 {
  font-size: 18px;
  font-size: 1.125rem; }

.u-h6 {
  font-size: 16px;
  font-size: 1rem; }

/**
 * COMPONENTS
 */

/*# sourceMappingURL=main.css.map */
